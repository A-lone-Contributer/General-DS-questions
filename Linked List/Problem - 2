// Find the Nth node in Linked List

class LinkedListNthNode {
    Node head;

    // Creation of node class
    class Node {
        int data;
        Node next;

        // Node constructor for initialisation of data and next
        Node(int data) {
            this.data = data;
            next = null;

        }
    }

    // function for inserting in linked list (at the start)
    public void push(int data) {

        Node new_node = new Node(data);
        new_node.next = head;
        head = new_node;
    }

    // Function to find the Nth node in linked list
    public int nthnode(int loc) {

        // initialise a temp pointer with head
        Node temp = head;

        // start a loop from 0 to that location-1
        for (int i = 0; i < loc - 1 && temp != null; i++) {

            // forward the temp pointer
            temp = temp.next;

        }

        // return the data at the point
        return temp.data;
    }

    // Utility function to print the list
    public void printlist() {
        Node tnode = head;
        while (tnode != null) {

            System.out.print(tnode.data + " ");
            tnode = tnode.next;
        }
    }

    // Driver code
    public static void main(String[] args) {

        LinkedListNthNode ll = new LinkedListNthNode();
        ll.push(7);
        ll.push(3);
        ll.push(2);
        ll.push(8);
        ll.push(1);

        ll.printlist();
        System.out.println();

        int loc=3;

        System.out.print("The element at position "+loc+" is : "+ll.nthnode(3));

    }

}

// Time Complexity : O(n)
// Space Complexity : O(1) (for the question)
